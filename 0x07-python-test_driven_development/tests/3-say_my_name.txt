The ``3-say_my_name`` module
============================

Using ``3-say_my_name``
-----------------------

Importing the function from the module:
	>>> say_my_name = __import__("3-say_my_name").say_my_name

Checking for module docString:
	>>> m = __import__("3-say_my_name").__doc__
	>>> len(m) > 1
	True

Checking for function docString:
	>>> f = __import__("3-say_my_name").say_my_name.__doc__
	>>> len(f) > 1
	True

Checking for both inputs as string:
	>>> say_my_name("John", "Smith")
	My name is John Smith

Checking for one input passed as string:
	>>> say_my_name("Christian")
	My name is Christian 

Checking for one argument of type int:
	>>> say_my_name(5, "Smith")
	Traceback (most recent call last):
	TypeError: first_name must be a string

Checking for one argument of type float:
	>>> say_my_name("Christian", 12.35)
	Traceback (most recent call last):
	TypeError: last_name must be a string

Checking for one argument of type list
	>>> say_my_name(["Christian"])
	Traceback (most recent call last):
	TypeError: first_name must be a string

Checking for no argument passed:
	>>> try:
	...	say_my_name()
	... except TypeError:
	...	print("say_my_name() missing 1 required positional argument: 'first_name'")
	say_my_name() missing 1 required positional argument: 'first_name'
